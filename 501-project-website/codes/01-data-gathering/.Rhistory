library("reshape")
data_melt = melt(train_cm_df)
head(data_melt)
ggp <- ggplot(data_melt, aes(X1, X2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp
ggp <- ggplot(data_melt, aes(NB_Predictions1, Var2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp
library("reshape")
data_melt = melt(Naive_Bayes_Model1)
library("reshape")
naive_df = as.data.frame(Naive_Bayes_Model1)
library("reshape")
data_melt = melt(NB_df)
head(data_melt)
ggp <- ggplot(data_melt, aes(NB_Predictions1, Var2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp
ggp <- ggplot(data_melt, aes(name, measure)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
library(naivebayes)
library(dplyr)
library(ggplot2)
library(psych)
library(e1071)
df <- read.csv("ny-air.csv")
head(df)
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
set.seed(1997)
sample <- sample(c(TRUE, FALSE), nrow(NB_df), replace=TRUE, prob=c(0.8,0.2))
NB_train1  <- NB_df[sample, ]
NB_test1   <- NB_df[!sample, ]
set.seed(120)
Naive_Bayes_Model1=naiveBayes(measure ~., data=NB_df)
Naive_Bayes_Model1
NB_Predictions1=predict(Naive_Bayes_Model1,NB_test1)
cm1 = table(NB_Predictions1,NB_test1$measure)
cm1
library(caret)
cms1 = confusionMatrix(cm1)
cms1
train_cm_df = data.frame(cm1)
train_cm_df
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
View(NB_df)
plot(NB_df)
barplot(NB_df)
View(NB_df)
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
barplot(NB_df$name,NB_df$data_valuemessage)
barchart(NB_df$name, NB_df)
ggplot(data = NB_df, mapping = aes(x = "name", y = "datavalue_message"))+
ggeom_bar(stat="identity")
ggplot(data = NB_df,aes(x = "name", y = "datavalue_message"))+
ggeom_bar()
library(ggplot2)
ggplot(data = NB_df,aes(x = "name", y = "datavalue_message"))+
ggeom_bar()
ggplot(data = NB_df,aes(x = "name", y = "datavalue_message"))+
geom_bar()
ggplot(data = NB_df,aes(x = "name"))+
geom_bar()
ggplot(data = NB_df,aes(x = "data_valuemessage",y ="name"))+
geom_bar()
ggplot(data = NB_df$name)+
geom_bar()
barchart(NB_df$name, NB_df)
ggplot(data = NB_df, aes(y = "name", x = count("name")))+
geom_bar()
ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
barchart(NB_df$name, NB_df)
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()
# Horizontal bar plot
p + coord_flip()
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
barchart(NB_df$name, NB_df)
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()+
labs(title = "Air Pollution Category Distribution", ylabs = "Category", xlabs = "Frequency")
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()+
labs(title = "Air Pollution Category Distribution", ylabs = "Category", xlabs = "Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()+
labs(title = "Air Pollution Category Distribution")+
ylab ("Category")+
xlabs ("Frequency")
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()+
labs(title = "Air Pollution Category Distribution")+
ylab ("Category")+
xlab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(col = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(col = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
barchart(NB_df$name, NB_df)
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")+
# Horizontal bar plot
p + coord_flip()
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
barchart(NB_df$name, NB_df)
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar()+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")+
# Horizontal bar plot
p + coord_flip()
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
barchart(NB_df$name, NB_df)
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "red")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "lightblue", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "blue", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "grey", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "green", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "lightgreen", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "lightgreen", fill = "lightblue", background = "white")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency")
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "lightgreen", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency") +
theme(panel.background = element_rect(fill = "white"))
# Horizontal bar plot
p + coord_flip()
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "grey", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency") +
theme(panel.background = element_rect(fill = "white"))
# Horizontal bar plot
p + coord_flip()
plot(NB_data)
plot(NB_data,type = "o", col = "orange", xlab = "Country", ylab = "AverageTemperature",
main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
View(NB_data)
plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperatureUncertainty", ylab = "AverageTemperature",
main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty",
main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
ggplot(NB_data, aes(AverageTemperature, AverageTemperatureUncertainty)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
ggplot(NB_data, aes(AverageTemperature, AverageTemperatureUncertainty)) +
geom_point() +
geom_point(data = NB_data, aes(y = mean), colour = 'red', size = 3)
ggplot(NB_data) +
geom_point(aes(AverageTemperature, AverageTemperatureUncertainty)) +
geom_point(data = NB_data, aes(AverageTemperature), colour = 'red', size = 3)
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Scatterplot
gg <- ggplot(NB_data, aes(x=AverageTemperature, y=AverageTemperatureUncertainty)) +
# geom_point(aes(col=state, size=popdensity)) +
# geom_smooth(method="loess", se=F) +
xlim(c(0, 0.1)) +
ylim(c(0, 500000)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
# Scatterplot
gg <- ggplot(NB_data, aes(x=AverageTemperature, y=AverageTemperatureUncertainty)) +
# geom_point(aes(col=state, size=popdensity)) +
# geom_smooth(method="loess", se=F) +
# xlim(c(0, 0.1)) +
# ylim(c(0, 500000)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
View(NB_data)
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Scatterplot
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(NB_data, aes(AverageTemperature, AverageTemperatureUncertainty))
g + geom_jitter(width = .5, size=1) +
labs(subtitle="mpg: city vs highway mileage",
y="hwy",
x="cty",
title="Jittered Points")
View(data)
View(data)
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(data, aes(dt, AverageTemperature)) +
geom_area() +
scale_x_date(breaks=brks, labels=lbls) +
theme(axis.text.x = element_text(angle=90)) +
labs(title="Area Chart",
subtitle = "Perc Returns for Personal Savings",
y="% Returns for Personal savings",
caption="Source: economics")
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(data, aes(dt, AverageTemperature)) +
geom_area() +
# scale_x_date(breaks=brks, labels=lbls) +
theme(axis.text.x = element_text(angle=90)) +
labs(title="Area Chart",
subtitle = "Perc Returns for Personal Savings",
y="% Returns for Personal savings",
caption="Source: economics")
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(data, aes(dt, AverageTemperature)) +
geom_area() +
scale_x_date(breaks="1 year", labels=lbls) +
theme(axis.text.x = element_text(angle=90)) +
labs(title="Area Chart",
subtitle = "Perc Returns for Personal Savings",
y="% Returns for Personal savings",
caption="Source: economics")
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(data, aes(dt, AverageTemperature)) +
geom_area() +
scale_x_date(breaks="1 year") +
theme(axis.text.x = element_text(angle=90)) +
labs(title="Area Chart",
subtitle = "Perc Returns for Personal Savings",
y="% Returns for Personal savings",
caption="Source: economics")
str(data)
data <- as.date(data$dt)
data$dt <- as.date(data$dt)
data$dt <- as.Date(data$dt)
str(data)
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(data, aes(dt, AverageTemperature)) +
geom_area() +
scale_x_date(breaks="1 year") +
theme(axis.text.x = element_text(angle=90)) +
labs(title="Area Chart",
subtitle = "Perc Returns for Personal Savings",
y="% Returns for Personal savings",
caption="Source: economics")
# Plot
ggplot(data, aes(dt, AverageTemperatureUncertainty)) +
geom_area() +
scale_x_date(breaks="1 year") +
theme(axis.text.x = element_text(angle=90)) +
labs(title="Area Chart",
subtitle = "Perc Returns for Personal Savings",
y="% Returns for Personal savings",
caption="Source: economics")
View(NB_data)
# Plot
ggplot(NB_data, aes(x=AverageTemperature, y=Country)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
# Plot
ggplot(NB_data, aes(x=Country, y=AverageTemperature)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
# Plot
ggplot(NB_data, aes(x=Country, y=AverageTemperature)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(NB_data, aes(x=Country, y=AverageTemperature)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
library(naivebayes)
library(dplyr)
library(ggplot2)
library(psych)
library(e1071)
df <- read.csv("ny-air.csv")
head(df)
NB_df = select(df, -indicator_data_id, -indicator_id, -geo_type_name, -geo_entity_id, -geo_entity_name, -year_description)
NB_df
p = ggplot(data = NB_df, aes(x=factor(name)))+
geom_bar(color = "grey", fill = "lightblue")+
labs(title = "Air Pollution Category Distribution")+
xlab ("Category")+
ylab ("Frequency") +
theme(panel.background = element_rect(fill = "white"))
# Horizontal bar plot
p + coord_flip()
set.seed(1997)
sample <- sample(c(TRUE, FALSE), nrow(NB_df), replace=TRUE, prob=c(0.8,0.2))
NB_train1  <- NB_df[sample, ]
NB_test1   <- NB_df[!sample, ]
set.seed(120)
Naive_Bayes_Model1=naiveBayes(measure ~., data=NB_df)
Naive_Bayes_Model1
NB_Predictions1=predict(Naive_Bayes_Model1,NB_test1)
cm1 = table(NB_Predictions1,NB_test1$measure)
cm1
library(caret)
cms1 = confusionMatrix(cm1)
cms1
train_cm_df = data.frame(cm1)
train_cm_df
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions1, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
library(naivebayes)
library(dplyr)
library(ggplot2)
library(psych)
library(e1071)
data <- read.csv("GlobalLandTemperaturesByMajorCity.csv")
data$dt <- as.Date(data$dt)
NB_data = select(data, -Latitude, -Longitude, -dt, -City)
NB_data = NB_data %>% mutate(Label =
case_when(NB_data$AverageTemperature > 22 & NB_data$AverageTemperature < 25  ~ "Normal",
NB_data$AverageTemperature >= 25 ~ "High",
NB_data$AverageTemperature < 22  ~ "Low")
)
NB_data
str(data)
# plot(NB_data,type = "o", col = "orange", xlab = "AverageTemperature", ylab = "AverageTemperatureUncertainty")
# main = "Violent Crime Rate \n(Rate per 100,000 people, by year) ")
# Plot
ggplot(NB_data, aes(x=Country, y=AverageTemperature)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Make Vs Avg. Mileage",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
set.seed(1997)
sample <- sample(c(TRUE, FALSE), nrow(NB_data), replace=TRUE, prob=c(0.8,0.2))
NB_train  <- NB_data[sample, ]
NB_test   <- NB_data[!sample, ]
set.seed(120)
Naive_Bayes_Model=naiveBayes(Label ~., data=NB_data)
Naive_Bayes_Model
NB_Predictions=predict(Naive_Bayes_Model,NB_test)
cm = table(NB_Predictions,NB_test$Label)
cm
library(caret)
cms = confusionMatrix(cm)
cms
train_cm_df = data.frame(cm)
ggplot(data = train_cm_df, mapping = aes(x = NB_Predictions, y = Var2)) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "lightblue", high = "yellow") +
theme_bw() + theme(legend.position = "none")
data <- read.csv("../../data/GlobalLandTemperaturesByMajorCity.csv")
data$dt <- as.Date(data$dt)
NB_data = select(data, -Latitude, -Longitude, -dt, -City)
NB_data = NB_data %>% mutate(Label =
case_when(NB_data$AverageTemperature > 22 & NB_data$AverageTemperature < 25  ~ "Normal",
NB_data$AverageTemperature >= 25 ~ "High",
NB_data$AverageTemperature < 22  ~ "Low")
)
NB_data
str(data)
df <- read.csv("../../data/ny-air.csv")
head(df)
